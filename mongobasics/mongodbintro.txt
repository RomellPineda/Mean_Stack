Create a database called 'my_first_db'.
    > use my_first_db
Create students collection.
    > db.createCollection('students')
Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
Create 5 students with the appropriate info.

    > db.students.insert({name:'Subzero', home_state:'NY', lucky_number:31, birthday:{month:12,day:1,year:1990}})
    WriteResult({ "nInserted" : 1 })
    > db.students.insert({name:'Scorpion', home_state:'NV', lucky_number:6, birthday:{month:1,day:12,year:1990}})
    WriteResult({ "nInserted" : 1 })
    > db.students.insert({name:'Storm Shadow', home_state:'CA', lucky_number:13, birthday:{month:9,day:11,year:1992}})
    WriteResult({ "nInserted" : 1 })
    > db.students.insert({name:'Snake Eyes', home_state:'CA', lucky_number:2, birthday:{month:3,day:21,year:1992}})
    WriteResult({ "nInserted" : 1 })
    > db.students.insert({name:'Grey Fox', home_state:'WA', lucky_number:99, birthday:{month:4,day:25,year:1992}})
    WriteResult({ "nInserted" : 1 })

Get all students.
    > db.students.find()
Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
    > db.students.find({home_state:'CA'})
Get all students whose lucky number is:
greater than 3
    > db.students.find({lucky_number:{$gt:3}})
less than or equal to 10
    > db.students.find({lucky_number:{$lte:10}})
between 1 and 9 (inclusive)
    > db.students.find({lucky_number:{$gte:1,$lte:9}})
Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
    > db.students.update({name:'Scorpion'}, {$set:{interest:['coding','brunch','MongoDB']}})
Add some unique interests for each particular student into each of their interest arrays.
    > db.students.update({name:'Subzero'}, {$set:{interest:['hipster bars','turtles','indie flicks']}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
    > db.students.update({name:'Storm Shadow'}, {$set:{interest:['Shadow Boxing','Eckhart Tolle']}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
    > db.students.update({name:'Snake Eyes'}, {$set:{interest:['Wolfpack Hustle','track bikes']}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
    > db.students.update({name:'Grey Fox'}, {$set:{interest:['Paleo diet','video games']}})
    WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

    //Can also $unset to remove category

Add the interest 'taxes' into someone's interest array.
        > db.students.update({name:'Grey Fox'}, {$push:{interest:'taxes'}})
Remove the 'taxes' interest you just added.
    > db.students.update({name:'Grey Fox'}, {$pop:{interest:1}})
Remove all students who are from California (or Washington).
    > db.students.remove({home_state:'CA'})
Remove a student by name. 
    > db.students.remove({name:'Grey Fox'})
Remove a student whose lucky number is greater than 5 (JUST ONE)
    > db.students.remove({lucky_number:{$gte:5}},true)
    //removed first
Add a field to each student collection called 'number_of_belts' and set it to 0.
    > db.students.update({},{$set:{number_of_belts:0}},{multi:true})
Increment this field by 1 for all students in Washington (Seattle Dojo).
    > db.students.update({home_state:'CA'},{$inc:{number_of_belts:+1}},{multi:true})
Rename the 'number_of_belts' field to 'belts_earned'
    > db.students.update({}, {$rename:{number_of_belts:'belts_earned'}},{multi:true}) 
Remove the 'lucky_number' field.
    > db.students.update({}, {$unset:{lucky_number:0}},false,true)
Add a 'updated_on' field, and set the value as the current date.
    > db.students.update({}, {$set: {updated_on:"07/10/2018"}},{multi:true})